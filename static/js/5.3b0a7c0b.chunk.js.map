{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Requests.jsx","components/EditTeam.jsx","pages/Company_Dashboard.jsx"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Requests","id","useParams","useContext","StoreContext","state","setState","useState","reqs","setReq","getRequests","useCallback","a","contract","methods","requested_emp_of_company","call","forEach","rid","some","req","parseInt","experiences","console","log","JSON","stringify","name","user_name","role","approveExp","loading","approve_experience","send","account","alert","error","useEffect","length","map","item","className","type","onClick","EditTeam","team","setTeam","style","setStyle","getEmployees","curr_emp_of_company","eids","eid","emp","exp","connected","i","Profile","lazy","Company_Dashboard","items","active","setActive","find","ActiveItem"],"mappings":"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","file":"static/js/5.3b0a7c0b.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState, useContext, useCallback, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { StoreContext } from '../utils/store';\n\nfunction Requests() {\n  const { id } = useParams();\n  const { state, setState } = useContext(StoreContext);\n  const [reqs, setReq] = useState([]);\n\n  const getRequests = useCallback(async () => {\n    const reqids = await state.contract.methods\n      .requested_emp_of_company(id)\n      .call();\n    reqids.forEach(async (rid) => {\n      if (!reqs.some(async (req) => req.id === parseInt(rid))) {\n        const req = await state.contract.methods.experiences(rid).call();\n        console.log(JSON.stringify(req));\n        setReq([\n          ...reqs,\n          {\n            id: parseInt(rid),\n            name: req.user_name,\n            role: req.role,\n          },\n        ]);\n      }\n    });\n  }, [id, reqs, state.contract]);\n\n  const approveExp = useCallback(\n    async (rid) => {\n      setState((state) => ({ ...state, loading: true }));\n      try {\n        await state.contract.methods\n          .approve_experience(rid, id)\n          .send({ from: state.account });\n      } catch (e) {\n        alert('error approving');\n        console.error(e);\n      }\n      setState((state) => ({ ...state, loading: false }));\n    },\n    [state.contract, state.account, id, setState]\n  );\n\n  useEffect(() => {\n    getRequests();\n  }, [getRequests]);\n\n  return (\n    <div>\n      <div>\n        {reqs.length > 0 ? (\n          reqs.map((item) => {\n            return (\n              <div\n                className='p-2 m-2 flex flex-row justify-around items-center bg-gray-200 border-solid rounded-lg '\n                id={item.id}>\n                <div>\n                  <p>\n                    <h1 className='font-medium text-lg text-blue-700 inline'>\n                      {item.name}\n                    </h1>{' '}\n                    has requested to join the team as {item.role} in your\n                    Oragnization.\n                  </p>\n                </div>\n                <div>\n                  <button\n                    className='bg-gray-800 text-white active:bg-gray-800 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150'\n                    type='button'\n                    onClick={() => {\n                      approveExp(item.id);\n                    }}>\n                    Accept\n                  </button>\n                  <button\n                    className='bg-red-800 text-white active:bg-red-800 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150'\n                    type='button'>\n                    Deny\n                  </button>\n                </div>\n              </div>\n            );\n          })\n        ) : (\n          <div>no requests</div>\n        )}\n      </div>\n    </div>\n  );\n}\nexport default Requests;\n","import { useState, useContext, useCallback, useEffect } from 'react';\nimport { StoreContext } from '../utils/store';\nimport { useParams } from 'react-router';\n\nfunction EditTeam() {\n  const { state } = useContext(StoreContext);\n  const { id } = useParams();\n  const [team, setTeam] = useState([\n    {\n      id: 123,\n      name: 'Hardik Agarwal ',\n      role: 'SDE-1',\n    },\n    {\n      id: 213,\n      name: 'Suryashankar Das',\n      role: 'SDE-1',\n    },\n  ]);\n  const [style, setStyle] = useState('');\n\n  const getEmployees = useCallback(async () => {\n    const eids = await state.contract.methods.curr_emp_of_company(id).call();\n    eids.forEach(async (eid) => {\n      if (!eids.some(async (emp) => emp.id === parseInt(eid))) {\n        const exp = await state.contract.methods.experiences(eid).call();\n        setTeam([\n          ...team,\n          {\n            id: parseInt(eid),\n            // name: (await state.contract.methods.companies(rid).call()).name,\n            name: 'Employee name',\n            role: exp.role,\n          },\n        ]);\n      }\n    });\n  }, [id, team, state.contract]);\n\n  useEffect(() => {\n    if (!state.connected) {\n      setStyle('authenticated');\n    }\n    getEmployees();\n  }, [getEmployees]);\n\n  return (\n    <div>\n      <div>\n        {team.map((item, i) => {\n          return (\n            <div className='p-2 m-2 flex flex-row justify-around items-center bg-gray-200 border-solid rounded-lg '>\n              <div>\n                <p>\n                  <h1 className='font-medium text-lg text-blue-700 inline'>\n                    {item.name}\n                  </h1>{' '}\n                  is part of of your Oraganization as {item.role} from Date to\n                  Date.\n                </p>\n              </div>\n              <div className={style}>\n                <button\n                  className={\n                    'bg-red-800 text-white active:bg-red-800 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150'\n                  }\n                  type='button'>\n                  Remove\n                </button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\nexport default EditTeam;\n","import { useState, lazy, useEffect, useContext } from 'react';\nimport { StoreContext } from '../utils/store';\nimport Requests from '../components/Requests';\nimport EditTeam from '../components/EditTeam';\nimport '../styles/App.css';\n\nconst Profile = lazy(() => import('../components/Profile'));\n\nfunction Company_Dashboard() {\n  const items = [\n    { id: 1, name: 'Requests' },\n    { id: 2, name: 'Team' },\n  ];\n  const { state, setState } = useContext(StoreContext);\n  const [style, setStyle] = useState('');\n\n  const [active, setActive] = useState(2);\n\n  useEffect(() => {\n    if (!state.connected) {\n      setStyle('authenticated');\n    }\n  }, [state.contract, setState]);\n\n  const ActiveItem = () => {\n    switch (active) {\n      case 1:\n        return (\n          <div className={style}>\n            <Requests />\n          </div>\n        );\n      case 2:\n        return <EditTeam />;\n      default:\n        return <h1>No option selcted</h1>;\n    }\n  };\n\n  return (\n    <div className='h-screen'>\n      <header className='bg-white shadow'>\n        <div className='max-w-9xl mx-auto py-6 px-4 sm:px-6 lg:px-8'>\n          <h1 className='text-3xl font-bold text-gray-900'>\n            {items.find((item) => item.id === active).name}\n          </h1>\n        </div>\n      </header>\n\n      <div className='flex mx-auto py-6 sm:px-6 lg:px-8 h-4/5'>\n        <sidebar className=' w-1/4 bg-gray-800 mx-auto sm:px-6 lg:px-8  float-left text-gray-300'>\n          {state.connected ? (\n            <>\n              {items.map((item, i) => {\n                return (\n                  <div\n                    key={i}\n                    className={`m-2 p-2 text-xl hover:bg-gray-300 hover:text-gray-800 w-full`}\n                    onClick={(i) => {\n                      setActive(item.id);\n                    }}>\n                    {item.name}\n                  </div>\n                );\n              })}\n            </>\n          ) : (\n            <div\n              className={`m-2 p-2 text-xl hover:bg-gray-300 hover:text-gray-800 w-full`}>\n              Team\n            </div>\n          )}\n        </sidebar>\n        <main className='w-3/4 lg:px-8 sm:px-6 mx-auto inline-block float-right h-full '>\n          <div className='border-4 border-solid border-gray-200 rounded-lg h-2/6 mx-5 mt-0 mb-1'>\n            <Profile />\n          </div>\n          <div className='border-4 border-solid border-gray-200 rounded-lg h-4/6 mx-5 mt-2'>\n            {ActiveItem()}\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default Company_Dashboard;\n"],"sourceRoot":""}